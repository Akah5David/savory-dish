import {
  require_castSlice,
  require_stringToArray
} from "./chunk-YXDCVYVT.js";
import {
  require_baseIndexOf,
  require_trimmedEndIndex
} from "./chunk-MQTX2EPM.js";
import {
  require_baseToString,
  require_toString
} from "./chunk-CE4VABH2.js";
import {
  __commonJS
} from "./chunk-PLDDJCW6.js";

// node_modules/lodash/_charsEndIndex.js
var require_charsEndIndex = __commonJS({
  "node_modules/lodash/_charsEndIndex.js"(exports, module) {
    var baseIndexOf = require_baseIndexOf();
    function charsEndIndex(strSymbols, chrSymbols) {
      var index = strSymbols.length;
      while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {
      }
      return index;
    }
    module.exports = charsEndIndex;
  }
});

// node_modules/lodash/trimEnd.js
var require_trimEnd = __commonJS({
  "node_modules/lodash/trimEnd.js"(exports, module) {
    var baseToString = require_baseToString();
    var castSlice = require_castSlice();
    var charsEndIndex = require_charsEndIndex();
    var stringToArray = require_stringToArray();
    var toString = require_toString();
    var trimmedEndIndex = require_trimmedEndIndex();
    function trimEnd(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === void 0)) {
        return string.slice(0, trimmedEndIndex(string) + 1);
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string), end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;
      return castSlice(strSymbols, 0, end).join("");
    }
    module.exports = trimEnd;
  }
});

export {
  require_trimEnd
};
//# sourceMappingURL=chunk-HYAPEEEA.js.map
