import {
  E,
  h
} from "./chunk-ROXOEY4R.js";
import {
  require_jsx_runtime
} from "./chunk-NIAJZ5MX.js";
import {
  require_react
} from "./chunk-MADUDGYZ.js";
import {
  __toESM
} from "./chunk-PLDDJCW6.js";

// node_modules/@strapi/admin/dist/admin/admin/src/components/Context.mjs
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var React = __toESM(require_react(), 1);
function createContext(rootComponentName, defaultContext) {
  const Context = E(defaultContext);
  const Provider = (props) => {
    const { children, ...context } = props;
    const value = React.useMemo(() => context, Object.values(context));
    return (0, import_jsx_runtime.jsx)(Context.Provider, {
      value,
      children
    });
  };
  function useContext(consumerName, selector, shouldThrowOnMissingContext) {
    return h(Context, (ctx) => {
      if (ctx) return selector(ctx);
      if (shouldThrowOnMissingContext) {
        throw new Error(`\`${consumerName}\` must be used within \`${rootComponentName}\``);
      }
      return void 0;
    });
  }
  Provider.displayName = rootComponentName + "Provider";
  return [
    Provider,
    useContext
  ];
}

export {
  createContext
};
//# sourceMappingURL=chunk-HQK34MOW.js.map
